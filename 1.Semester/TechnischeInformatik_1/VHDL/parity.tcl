
########## Tcl recorder starts at 11/07/16 11:38:42 ##########

set version "1.6"
set proj_dir "N:/VHDL"
cd $proj_dir

# Get directory paths
set pver $version
regsub -all {\.} $pver {_} pver
set lscfile "lsc_"
append lscfile $pver ".ini"
set lsvini_dir [lindex [array get env LSC_INI_PATH] 1]
set lsvini_path [file join $lsvini_dir $lscfile]
if {[catch {set fid [open $lsvini_path]} msg]} {
	 puts "File Open Error: $lsvini_path"
	 return false
} else {set data [read $fid]; close $fid }
foreach line [split $data '\n'] { 
	set lline [string tolower $line]
	set lline [string trim $lline]
	if {[string compare $lline "\[paths\]"] == 0} { set path 1; continue}
	if {$path && [regexp {^\[} $lline]} {set path 0; break}
	if {$path && [regexp {^bin} $lline]} {set cpld_bin $line; continue}
	if {$path && [regexp {^fpgapath} $lline]} {set fpga_dir $line; continue}
	if {$path && [regexp {^fpgabinpath} $lline]} {set fpga_bin $line}}

set cpld_bin [string range $cpld_bin [expr [string first "=" $cpld_bin]+1] end]
regsub -all "\"" $cpld_bin "" cpld_bin
set cpld_bin [file join $cpld_bin]
set install_dir [string range $cpld_bin 0 [expr [string first "ispcpld" $cpld_bin]-2]]
regsub -all "\"" $install_dir "" install_dir
set install_dir [file join $install_dir]
set fpga_dir [string range $fpga_dir [expr [string first "=" $fpga_dir]+1] end]
regsub -all "\"" $fpga_dir "" fpga_dir
set fpga_dir [file join $fpga_dir]
set fpga_bin [string range $fpga_bin [expr [string first "=" $fpga_bin]+1] end]
regsub -all "\"" $fpga_bin "" fpga_bin
set fpga_bin [file join $fpga_bin]

if {[string match "*$fpga_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$fpga_bin;$env(PATH)" }

if {[string match "*$cpld_bin;*" $env(PATH)] == 0 } {
   set env(PATH) "$cpld_bin;$env(PATH)" }

lappend auto_path [file join $install_dir "ispcpld" "tcltk" "lib" "ispwidget" "runproc"]
package require runcmd

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" \"parity.vhd\" -o \"parity.jhd\" -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 11:38:42 ###########


########## Tcl recorder starts at 11/07/16 11:39:22 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo._sp w} rspFile] {
	puts stderr "Cannot create response file udo._sp: $rspFile"
} else {
	puts $rspFile "# ispLever System simulation template: tparityfa.udo.
# You may edit this file to control your simulation.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open tparity._sp w} rspFile] {
	puts stderr "Cannot create response file tparity._sp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#stimulus vhdl Parity tparity.vhd
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#unixpath
#do 
#unixpath $install_dir/ispcpld/generic/verilog
#libfile generic.vlb
#vlogdef parity.h
#unixpath
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo parity.sty
#vlogSrc 
#unixpath
#vcomSrc  parity.vhd
#vcom tparity.vhd
#insert vsim +access +r %<StimModule>%
#youdo tparityfa.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" \"tparity._sp\" \"tparity.fado\" \"udo._sp\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo._sp
file delete tparity._sp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 11:39:22 ###########


########## Tcl recorder starts at 11/07/16 11:43:19 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 11:43:19 ###########


########## Tcl recorder starts at 11/07/16 11:50:32 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 11:50:32 ###########


########## Tcl recorder starts at 11/07/16 12:03:39 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo._sp w} rspFile] {
	puts stderr "Cannot create response file udo._sp: $rspFile"
} else {
	puts $rspFile "# ispLever System simulation template: tparityfa.udo.
# You may edit this file to control your simulation.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open tparity._sp w} rspFile] {
	puts stderr "Cannot create response file tparity._sp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#stimulus vhdl Parity tparity.vhd
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#unixpath
#do 
#unixpath $install_dir/ispcpld/generic/verilog
#libfile generic.vlb
#vlogdef parity.h
#unixpath
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo parity.sty
#vlogSrc 
#unixpath
#vcomSrc  parity.vhd
#vcom tparity.vhd
#insert vsim +access +r %<StimModule>%
#youdo tparityfa.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" \"tparity._sp\" \"tparity.fado\" \"udo._sp\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo._sp
file delete tparity._sp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 12:03:39 ###########


########## Tcl recorder starts at 11/07/16 12:04:48 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 12:04:48 ###########


########## Tcl recorder starts at 11/07/16 12:33:37 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo._sp w} rspFile] {
	puts stderr "Cannot create response file udo._sp: $rspFile"
} else {
	puts $rspFile "# ispLever System simulation template: tparityfa.udo.
# You may edit this file to control your simulation.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open tparity._sp w} rspFile] {
	puts stderr "Cannot create response file tparity._sp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#stimulus vhdl Parity tparity.vhd
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#unixpath
#do 
#unixpath $install_dir/ispcpld/generic/verilog
#libfile generic.vlb
#vlogdef parity.h
#unixpath
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo parity.sty
#vlogSrc 
#unixpath
#vcomSrc  parity.vhd
#vcom tparity.vhd
#insert vsim +access +r %<StimModule>%
#youdo tparityfa.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" \"tparity._sp\" \"tparity.fado\" \"udo._sp\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo._sp
file delete tparity._sp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 12:33:37 ###########


########## Tcl recorder starts at 11/07/16 12:43:29 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" \"parity.vhd\" -o \"parity.jhd\" -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 12:43:29 ###########


########## Tcl recorder starts at 11/07/16 12:43:47 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 12:43:47 ###########


########## Tcl recorder starts at 11/07/16 13:01:22 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" \"parity.vhd\" -o \"parity.jhd\" -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:01:22 ###########


########## Tcl recorder starts at 11/07/16 13:01:54 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
if [catch {open udo._sp w} rspFile] {
	puts stderr "Cannot create response file udo._sp: $rspFile"
} else {
	puts $rspFile "# ispLever System simulation template: tparityfa.udo.
# You may edit this file to control your simulation.
# You may specify your waveforms.
add wave *
# You may specify your simulation run time.
run 1000 ns
"
	close $rspFile
}
if [catch {open tparity._sp w} rspFile] {
	puts stderr "Cannot create response file tparity._sp: $rspFile"
} else {
	puts $rspFile "#simulator Aldec
#stimulus vhdl Parity tparity.vhd
#insert # NOTE: Do not edit this file.
#insert # Auto generated by VHDL Functional Simulation Models
#insert #
#insert design create work .
#insert design open work
#insert adel -all
#unixpath
#do 
#unixpath $install_dir/ispcpld/generic/verilog
#libfile generic.vlb
#vlogdef parity.h
#unixpath
#insert source {$cpld_bin/chipsim_cmd.tcl}
#prjInfo parity.sty
#vlogSrc 
#unixpath
#vcomSrc  parity.vhd
#vcom tparity.vhd
#insert vsim +access +r %<StimModule>%
#youdo tparityfa.udo
#insert # End
"
	close $rspFile
}
if [runCmd "\"$cpld_bin/chipsim\" \"tparity._sp\" \"tparity.fado\" \"udo._sp\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}
file delete udo._sp
file delete tparity._sp
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:01:54 ###########


########## Tcl recorder starts at 11/07/16 13:03:00 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" \"parity.vhd\" -o \"parity.jhd\" -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:03:00 ###########


########## Tcl recorder starts at 11/07/16 13:03:08 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:03:09 ###########


########## Tcl recorder starts at 11/07/16 13:06:41 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" \"parity.vhd\" -o \"parity.jhd\" -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:06:41 ###########


########## Tcl recorder starts at 11/07/16 13:06:48 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:06:48 ###########


########## Tcl recorder starts at 11/07/16 13:07:58 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" \"parity.vhd\" -o \"parity.jhd\" -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:07:58 ###########


########## Tcl recorder starts at 11/07/16 13:08:05 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:08:05 ###########


########## Tcl recorder starts at 11/07/16 13:10:50 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:10:50 ###########


########## Tcl recorder starts at 11/07/16 13:14:29 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:14:29 ###########


########## Tcl recorder starts at 11/07/16 13:18:54 ##########

# Commands to make the Process: 
# Hierarchy
if [runCmd "\"$cpld_bin/vhd2jhd\" \"parity.vhd\" -o \"parity.jhd\" -m \"$install_dir/ispcpld/generic/lib/vhd/location.map\" -p \"$install_dir/ispcpld/generic/lib\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:18:54 ###########


########## Tcl recorder starts at 11/07/16 13:19:06 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:19:06 ###########


########## Tcl recorder starts at 11/07/16 13:19:55 ##########

# Commands to make the Process: 
# Aldec VHDL Functional Simulation
# - none -
# Application to view the Process: 
# Aldec VHDL Functional Simulation
if [catch {open tparity_activehdl_user.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl_user.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
"
	close $rspFile
}
if [catch {open tparity_activehdl.do w} rspFile] {
	puts stderr "Cannot create response file tparity_activehdl.do: $rspFile"
} else {
	puts $rspFile "set SIM_WORKING_FOLDER .
do -tcl tparity.fado
"
	close $rspFile
}
if [runCmd "\"$install_dir/active-hdl/BIN/avhdl\" -do \"tparity_activehdl.do\""] {
	return
} else {
	vwait done
	if [checkResult $done] {
		return
	}
}

########## Tcl recorder end at 11/07/16 13:19:55 ###########

